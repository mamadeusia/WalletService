// Copyright Â© 2017-2022 Trust Wallet.
//
// This file is part of Trust. The full Trust copyright notice, including
// terms governing use, modification, and redistribution, is contained in the
// file LICENSE at the root of the source code distribution tree.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.9
// source: Aptos.proto

package aptos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Necessary fields to process a TransferMessage
type TransferMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Destination Account address (string)
	To string `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	// Amount to be transferred (uint64)
	Amount uint64 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *TransferMessage) Reset() {
	*x = TransferMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Aptos_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferMessage) ProtoMessage() {}

func (x *TransferMessage) ProtoReflect() protoreflect.Message {
	mi := &file_Aptos_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferMessage.ProtoReflect.Descriptor instead.
func (*TransferMessage) Descriptor() ([]byte, []int) {
	return file_Aptos_proto_rawDescGZIP(), []int{0}
}

func (x *TransferMessage) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *TransferMessage) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

// Necessary tag for type function argument
type StructTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Address of the account
	AccountAddress string `protobuf:"bytes,1,opt,name=account_address,json=accountAddress,proto3" json:"account_address,omitempty"`
	// Module name
	Module string `protobuf:"bytes,2,opt,name=module,proto3" json:"module,omitempty"`
	// Identifier
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *StructTag) Reset() {
	*x = StructTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Aptos_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StructTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StructTag) ProtoMessage() {}

func (x *StructTag) ProtoReflect() protoreflect.Message {
	mi := &file_Aptos_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StructTag.ProtoReflect.Descriptor instead.
func (*StructTag) Descriptor() ([]byte, []int) {
	return file_Aptos_proto_rawDescGZIP(), []int{1}
}

func (x *StructTag) GetAccountAddress() string {
	if x != nil {
		return x.AccountAddress
	}
	return ""
}

func (x *StructTag) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (x *StructTag) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Necessary fields to process a TokenTransferMessage
type TokenTransferMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Destination Account address (string)
	To string `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	// Amount to be transferred (uint64)
	Amount uint64 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	// token function to call, e.g BTC: 0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::coins::BTC
	Function *StructTag `protobuf:"bytes,3,opt,name=function,proto3" json:"function,omitempty"`
}

func (x *TokenTransferMessage) Reset() {
	*x = TokenTransferMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Aptos_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenTransferMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenTransferMessage) ProtoMessage() {}

func (x *TokenTransferMessage) ProtoReflect() protoreflect.Message {
	mi := &file_Aptos_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenTransferMessage.ProtoReflect.Descriptor instead.
func (*TokenTransferMessage) Descriptor() ([]byte, []int) {
	return file_Aptos_proto_rawDescGZIP(), []int{2}
}

func (x *TokenTransferMessage) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *TokenTransferMessage) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *TokenTransferMessage) GetFunction() *StructTag {
	if x != nil {
		return x.Function
	}
	return nil
}

// Necessary fields to process a ManagedTokensRegisterMessage
type ManagedTokensRegisterMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// token function to register, e.g BTC: 0x43417434fd869edee76cca2a4d2301e528a1551b1d719b75c350c3c97d15b8b9::coins::BTC
	Function *StructTag `protobuf:"bytes,1,opt,name=function,proto3" json:"function,omitempty"`
}

func (x *ManagedTokensRegisterMessage) Reset() {
	*x = ManagedTokensRegisterMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Aptos_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManagedTokensRegisterMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManagedTokensRegisterMessage) ProtoMessage() {}

func (x *ManagedTokensRegisterMessage) ProtoReflect() protoreflect.Message {
	mi := &file_Aptos_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManagedTokensRegisterMessage.ProtoReflect.Descriptor instead.
func (*ManagedTokensRegisterMessage) Descriptor() ([]byte, []int) {
	return file_Aptos_proto_rawDescGZIP(), []int{3}
}

func (x *ManagedTokensRegisterMessage) GetFunction() *StructTag {
	if x != nil {
		return x.Function
	}
	return nil
}

// Necessary fields to process a CreateAccountMessage
type CreateAccountMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// auth account address to create
	AuthKey string `protobuf:"bytes,1,opt,name=auth_key,json=authKey,proto3" json:"auth_key,omitempty"`
}

func (x *CreateAccountMessage) Reset() {
	*x = CreateAccountMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Aptos_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAccountMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccountMessage) ProtoMessage() {}

func (x *CreateAccountMessage) ProtoReflect() protoreflect.Message {
	mi := &file_Aptos_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccountMessage.ProtoReflect.Descriptor instead.
func (*CreateAccountMessage) Descriptor() ([]byte, []int) {
	return file_Aptos_proto_rawDescGZIP(), []int{4}
}

func (x *CreateAccountMessage) GetAuthKey() string {
	if x != nil {
		return x.AuthKey
	}
	return ""
}

// Necessary fields to process an OfferNftMessage
type OfferNftMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Receiver address
	Receiver string `protobuf:"bytes,1,opt,name=receiver,proto3" json:"receiver,omitempty"`
	// Creator address
	Creator string `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty"`
	// Name of the collection
	CollectionName string `protobuf:"bytes,3,opt,name=collectionName,proto3" json:"collectionName,omitempty"`
	// Name of the NFT
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// Property version (should be often 0)
	PropertyVersion uint64 `protobuf:"varint,5,opt,name=property_version,json=propertyVersion,proto3" json:"property_version,omitempty"`
	// Amount of NFT's to transfer (should be often 1)
	Amount uint64 `protobuf:"varint,6,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *OfferNftMessage) Reset() {
	*x = OfferNftMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Aptos_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfferNftMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfferNftMessage) ProtoMessage() {}

func (x *OfferNftMessage) ProtoReflect() protoreflect.Message {
	mi := &file_Aptos_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfferNftMessage.ProtoReflect.Descriptor instead.
func (*OfferNftMessage) Descriptor() ([]byte, []int) {
	return file_Aptos_proto_rawDescGZIP(), []int{5}
}

func (x *OfferNftMessage) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

func (x *OfferNftMessage) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *OfferNftMessage) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *OfferNftMessage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OfferNftMessage) GetPropertyVersion() uint64 {
	if x != nil {
		return x.PropertyVersion
	}
	return 0
}

func (x *OfferNftMessage) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

// Necessary fields to process an CancelOfferNftMessage
type CancelOfferNftMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Receiver address
	Receiver string `protobuf:"bytes,1,opt,name=receiver,proto3" json:"receiver,omitempty"`
	// Creator address
	Creator string `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty"`
	// Name of the collection
	CollectionName string `protobuf:"bytes,3,opt,name=collectionName,proto3" json:"collectionName,omitempty"`
	// Name of the NFT
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// Property version (should be often 0)
	PropertyVersion uint64 `protobuf:"varint,5,opt,name=property_version,json=propertyVersion,proto3" json:"property_version,omitempty"`
}

func (x *CancelOfferNftMessage) Reset() {
	*x = CancelOfferNftMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Aptos_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelOfferNftMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelOfferNftMessage) ProtoMessage() {}

func (x *CancelOfferNftMessage) ProtoReflect() protoreflect.Message {
	mi := &file_Aptos_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelOfferNftMessage.ProtoReflect.Descriptor instead.
func (*CancelOfferNftMessage) Descriptor() ([]byte, []int) {
	return file_Aptos_proto_rawDescGZIP(), []int{6}
}

func (x *CancelOfferNftMessage) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

func (x *CancelOfferNftMessage) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *CancelOfferNftMessage) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *CancelOfferNftMessage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CancelOfferNftMessage) GetPropertyVersion() uint64 {
	if x != nil {
		return x.PropertyVersion
	}
	return 0
}

// Necessary fields to process an ClaimNftMessage
type ClaimNftMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Sender address
	Sender string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	// Creator address
	Creator string `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty"`
	// Name of the collection
	CollectionName string `protobuf:"bytes,3,opt,name=collectionName,proto3" json:"collectionName,omitempty"`
	// Name of the NFT
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// Property version (should be often 0)
	PropertyVersion uint64 `protobuf:"varint,5,opt,name=property_version,json=propertyVersion,proto3" json:"property_version,omitempty"`
}

func (x *ClaimNftMessage) Reset() {
	*x = ClaimNftMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Aptos_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClaimNftMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClaimNftMessage) ProtoMessage() {}

func (x *ClaimNftMessage) ProtoReflect() protoreflect.Message {
	mi := &file_Aptos_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClaimNftMessage.ProtoReflect.Descriptor instead.
func (*ClaimNftMessage) Descriptor() ([]byte, []int) {
	return file_Aptos_proto_rawDescGZIP(), []int{7}
}

func (x *ClaimNftMessage) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *ClaimNftMessage) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *ClaimNftMessage) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *ClaimNftMessage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ClaimNftMessage) GetPropertyVersion() uint64 {
	if x != nil {
		return x.PropertyVersion
	}
	return 0
}

type NftMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to NftTransactionPayload:
	//	*NftMessage_OfferNft
	//	*NftMessage_CancelOfferNft
	//	*NftMessage_ClaimNft
	NftTransactionPayload isNftMessage_NftTransactionPayload `protobuf_oneof:"nft_transaction_payload"`
}

func (x *NftMessage) Reset() {
	*x = NftMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Aptos_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NftMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NftMessage) ProtoMessage() {}

func (x *NftMessage) ProtoReflect() protoreflect.Message {
	mi := &file_Aptos_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NftMessage.ProtoReflect.Descriptor instead.
func (*NftMessage) Descriptor() ([]byte, []int) {
	return file_Aptos_proto_rawDescGZIP(), []int{8}
}

func (m *NftMessage) GetNftTransactionPayload() isNftMessage_NftTransactionPayload {
	if m != nil {
		return m.NftTransactionPayload
	}
	return nil
}

func (x *NftMessage) GetOfferNft() *OfferNftMessage {
	if x, ok := x.GetNftTransactionPayload().(*NftMessage_OfferNft); ok {
		return x.OfferNft
	}
	return nil
}

func (x *NftMessage) GetCancelOfferNft() *CancelOfferNftMessage {
	if x, ok := x.GetNftTransactionPayload().(*NftMessage_CancelOfferNft); ok {
		return x.CancelOfferNft
	}
	return nil
}

func (x *NftMessage) GetClaimNft() *ClaimNftMessage {
	if x, ok := x.GetNftTransactionPayload().(*NftMessage_ClaimNft); ok {
		return x.ClaimNft
	}
	return nil
}

type isNftMessage_NftTransactionPayload interface {
	isNftMessage_NftTransactionPayload()
}

type NftMessage_OfferNft struct {
	OfferNft *OfferNftMessage `protobuf:"bytes,1,opt,name=offer_nft,json=offerNft,proto3,oneof"`
}

type NftMessage_CancelOfferNft struct {
	CancelOfferNft *CancelOfferNftMessage `protobuf:"bytes,2,opt,name=cancel_offer_nft,json=cancelOfferNft,proto3,oneof"`
}

type NftMessage_ClaimNft struct {
	ClaimNft *ClaimNftMessage `protobuf:"bytes,3,opt,name=claim_nft,json=claimNft,proto3,oneof"`
}

func (*NftMessage_OfferNft) isNftMessage_NftTransactionPayload() {}

func (*NftMessage_CancelOfferNft) isNftMessage_NftTransactionPayload() {}

func (*NftMessage_ClaimNft) isNftMessage_NftTransactionPayload() {}

// Input data necessary to create a signed transaction.
type SigningInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Sender Account address (string)
	Sender string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	// Sequence number, incremented atomically for each tx present on the account, start at 0 (int64)
	SequenceNumber int64 `protobuf:"varint,2,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	// Max gas amount that the user is willing to pay (uint64)
	MaxGasAmount uint64 `protobuf:"varint,3,opt,name=max_gas_amount,json=maxGasAmount,proto3" json:"max_gas_amount,omitempty"`
	// Gas unit price - queried through API (uint64)
	GasUnitPrice uint64 `protobuf:"varint,4,opt,name=gas_unit_price,json=gasUnitPrice,proto3" json:"gas_unit_price,omitempty"`
	// Expiration timestamp for the transaction, can't be in the past (uint64)
	ExpirationTimestampSecs uint64 `protobuf:"varint,5,opt,name=expiration_timestamp_secs,json=expirationTimestampSecs,proto3" json:"expiration_timestamp_secs,omitempty"`
	//  Chain id 1 (mainnet) 32(devnet) (uint32 - casted in uint8_t later)
	ChainId uint32 `protobuf:"varint,6,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	//  Private key to sign the transaction (bytes)
	PrivateKey []byte `protobuf:"bytes,7,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	// hex encoded function to sign, use it for smart contract approval (string)
	AnyEncoded string `protobuf:"bytes,8,opt,name=any_encoded,json=anyEncoded,proto3" json:"any_encoded,omitempty"`
	// Types that are assignable to TransactionPayload:
	//	*SigningInput_Transfer
	//	*SigningInput_TokenTransfer
	//	*SigningInput_CreateAccount
	//	*SigningInput_NftMessage
	//	*SigningInput_RegisterToken
	TransactionPayload isSigningInput_TransactionPayload `protobuf_oneof:"transaction_payload"`
}

func (x *SigningInput) Reset() {
	*x = SigningInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Aptos_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SigningInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SigningInput) ProtoMessage() {}

func (x *SigningInput) ProtoReflect() protoreflect.Message {
	mi := &file_Aptos_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SigningInput.ProtoReflect.Descriptor instead.
func (*SigningInput) Descriptor() ([]byte, []int) {
	return file_Aptos_proto_rawDescGZIP(), []int{9}
}

func (x *SigningInput) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *SigningInput) GetSequenceNumber() int64 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *SigningInput) GetMaxGasAmount() uint64 {
	if x != nil {
		return x.MaxGasAmount
	}
	return 0
}

func (x *SigningInput) GetGasUnitPrice() uint64 {
	if x != nil {
		return x.GasUnitPrice
	}
	return 0
}

func (x *SigningInput) GetExpirationTimestampSecs() uint64 {
	if x != nil {
		return x.ExpirationTimestampSecs
	}
	return 0
}

func (x *SigningInput) GetChainId() uint32 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *SigningInput) GetPrivateKey() []byte {
	if x != nil {
		return x.PrivateKey
	}
	return nil
}

func (x *SigningInput) GetAnyEncoded() string {
	if x != nil {
		return x.AnyEncoded
	}
	return ""
}

func (m *SigningInput) GetTransactionPayload() isSigningInput_TransactionPayload {
	if m != nil {
		return m.TransactionPayload
	}
	return nil
}

func (x *SigningInput) GetTransfer() *TransferMessage {
	if x, ok := x.GetTransactionPayload().(*SigningInput_Transfer); ok {
		return x.Transfer
	}
	return nil
}

func (x *SigningInput) GetTokenTransfer() *TokenTransferMessage {
	if x, ok := x.GetTransactionPayload().(*SigningInput_TokenTransfer); ok {
		return x.TokenTransfer
	}
	return nil
}

func (x *SigningInput) GetCreateAccount() *CreateAccountMessage {
	if x, ok := x.GetTransactionPayload().(*SigningInput_CreateAccount); ok {
		return x.CreateAccount
	}
	return nil
}

func (x *SigningInput) GetNftMessage() *NftMessage {
	if x, ok := x.GetTransactionPayload().(*SigningInput_NftMessage); ok {
		return x.NftMessage
	}
	return nil
}

func (x *SigningInput) GetRegisterToken() *ManagedTokensRegisterMessage {
	if x, ok := x.GetTransactionPayload().(*SigningInput_RegisterToken); ok {
		return x.RegisterToken
	}
	return nil
}

type isSigningInput_TransactionPayload interface {
	isSigningInput_TransactionPayload()
}

type SigningInput_Transfer struct {
	Transfer *TransferMessage `protobuf:"bytes,9,opt,name=transfer,proto3,oneof"`
}

type SigningInput_TokenTransfer struct {
	TokenTransfer *TokenTransferMessage `protobuf:"bytes,10,opt,name=token_transfer,json=tokenTransfer,proto3,oneof"`
}

type SigningInput_CreateAccount struct {
	CreateAccount *CreateAccountMessage `protobuf:"bytes,11,opt,name=create_account,json=createAccount,proto3,oneof"`
}

type SigningInput_NftMessage struct {
	NftMessage *NftMessage `protobuf:"bytes,12,opt,name=nft_message,json=nftMessage,proto3,oneof"`
}

type SigningInput_RegisterToken struct {
	RegisterToken *ManagedTokensRegisterMessage `protobuf:"bytes,13,opt,name=register_token,json=registerToken,proto3,oneof"`
}

func (*SigningInput_Transfer) isSigningInput_TransactionPayload() {}

func (*SigningInput_TokenTransfer) isSigningInput_TransactionPayload() {}

func (*SigningInput_CreateAccount) isSigningInput_TransactionPayload() {}

func (*SigningInput_NftMessage) isSigningInput_TransactionPayload() {}

func (*SigningInput_RegisterToken) isSigningInput_TransactionPayload() {}

// Information related to the signed transaction
type TransactionAuthenticator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Signature part of the signed transaction (bytes)
	Signature []byte `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	// Public key of the signer (bytes)
	PublicKey []byte `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
}

func (x *TransactionAuthenticator) Reset() {
	*x = TransactionAuthenticator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Aptos_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionAuthenticator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionAuthenticator) ProtoMessage() {}

func (x *TransactionAuthenticator) ProtoReflect() protoreflect.Message {
	mi := &file_Aptos_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionAuthenticator.ProtoReflect.Descriptor instead.
func (*TransactionAuthenticator) Descriptor() ([]byte, []int) {
	return file_Aptos_proto_rawDescGZIP(), []int{10}
}

func (x *TransactionAuthenticator) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *TransactionAuthenticator) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

// Transaction signing output.
type SigningOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	/// The raw transaction (bytes)
	RawTxn []byte `protobuf:"bytes,1,opt,name=raw_txn,json=rawTxn,proto3" json:"raw_txn,omitempty"`
	/// Public key and signature to authenticate
	Authenticator *TransactionAuthenticator `protobuf:"bytes,2,opt,name=authenticator,proto3" json:"authenticator,omitempty"`
	/// Signed and encoded transaction bytes.
	Encoded []byte `protobuf:"bytes,3,opt,name=encoded,proto3" json:"encoded,omitempty"`
	// Transaction json format for api broadcasting (string)
	Json string `protobuf:"bytes,4,opt,name=json,proto3" json:"json,omitempty"`
}

func (x *SigningOutput) Reset() {
	*x = SigningOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Aptos_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SigningOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SigningOutput) ProtoMessage() {}

func (x *SigningOutput) ProtoReflect() protoreflect.Message {
	mi := &file_Aptos_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SigningOutput.ProtoReflect.Descriptor instead.
func (*SigningOutput) Descriptor() ([]byte, []int) {
	return file_Aptos_proto_rawDescGZIP(), []int{11}
}

func (x *SigningOutput) GetRawTxn() []byte {
	if x != nil {
		return x.RawTxn
	}
	return nil
}

func (x *SigningOutput) GetAuthenticator() *TransactionAuthenticator {
	if x != nil {
		return x.Authenticator
	}
	return nil
}

func (x *SigningOutput) GetEncoded() []byte {
	if x != nil {
		return x.Encoded
	}
	return nil
}

func (x *SigningOutput) GetJson() string {
	if x != nil {
		return x.Json
	}
	return ""
}

var File_Aptos_proto protoreflect.FileDescriptor

var file_Aptos_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x41, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x54,
	0x57, 0x2e, 0x41, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x39, 0x0a,
	0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x60, 0x0a, 0x09, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x54, 0x61, 0x67, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x75, 0x0a, 0x14, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x35, 0x0a, 0x08, 0x66, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54,
	0x57, 0x2e, 0x41, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x54, 0x61, 0x67, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x55, 0x0a, 0x1c, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x35, 0x0a, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x57, 0x2e, 0x41, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x54, 0x61, 0x67, 0x52, 0x08,
	0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x31, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x22, 0xc6, 0x01, 0x0a, 0x0f,
	0x4f, 0x66, 0x66, 0x65, 0x72, 0x4e, 0x66, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0xb4, 0x01, 0x0a, 0x15, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4f,
	0x66, 0x66, 0x65, 0x72, 0x4e, 0x66, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xaa, 0x01, 0x0a, 0x0f,
	0x43, 0x6c, 0x61, 0x69, 0x6d, 0x4e, 0x66, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a,
	0x10, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xfa, 0x01, 0x0a, 0x0a, 0x4e, 0x66, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3e, 0x0a, 0x09, 0x6f, 0x66, 0x66, 0x65, 0x72,
	0x5f, 0x6e, 0x66, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x54, 0x57, 0x2e,
	0x41, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x66, 0x66, 0x65,
	0x72, 0x4e, 0x66, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x08, 0x6f,
	0x66, 0x66, 0x65, 0x72, 0x4e, 0x66, 0x74, 0x12, 0x51, 0x0a, 0x10, 0x63, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x5f, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x6e, 0x66, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x54, 0x57, 0x2e, 0x41, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x4e, 0x66,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x63, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x4e, 0x66, 0x74, 0x12, 0x3e, 0x0a, 0x09, 0x63, 0x6c,
	0x61, 0x69, 0x6d, 0x5f, 0x6e, 0x66, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x54, 0x57, 0x2e, 0x41, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x6c, 0x61, 0x69, 0x6d, 0x4e, 0x66, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00,
	0x52, 0x08, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x4e, 0x66, 0x74, 0x42, 0x19, 0x0a, 0x17, 0x6e, 0x66,
	0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xbe, 0x05, 0x0a, 0x0c, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e,
	0x67, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x27,
	0x0a, 0x0f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x61, 0x78, 0x5f, 0x67,
	0x61, 0x73, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0c, 0x6d, 0x61, 0x78, 0x47, 0x61, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a,
	0x0e, 0x67, 0x61, 0x73, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x67, 0x61, 0x73, 0x55, 0x6e, 0x69, 0x74, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x3a, 0x0a, 0x19, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x73, 0x65, 0x63, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x17, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x53, 0x65, 0x63, 0x73, 0x12,
	0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x61,
	0x6e, 0x79, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x61, 0x6e, 0x79, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x12, 0x3d, 0x0a, 0x08,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x54, 0x57, 0x2e, 0x41, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48,
	0x00, 0x52, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x4d, 0x0a, 0x0e, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x54, 0x57, 0x2e, 0x41, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x4d, 0x0a, 0x0e, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x54, 0x57, 0x2e, 0x41, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x0b, 0x6e, 0x66, 0x74,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x54, 0x57, 0x2e, 0x41, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4e, 0x66, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x6e, 0x66,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x55, 0x0a, 0x0e, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x54, 0x57, 0x2e, 0x41, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00,
	0x52, 0x0d, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42,
	0x15, 0x0a, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x57, 0x0a, 0x18, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74,
	0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22,
	0xa6, 0x01, 0x0a, 0x0d, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x61, 0x77, 0x5f, 0x74, 0x78, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x72, 0x61, 0x77, 0x54, 0x78, 0x6e, 0x12, 0x4e, 0x0a, 0x0d, 0x61, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x54, 0x57, 0x2e, 0x41, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x0d, 0x61, 0x75, 0x74,
	0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e,
	0x63, 0x6f, 0x64, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x65, 0x6e, 0x63,
	0x6f, 0x64, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x42, 0x17, 0x0a, 0x15, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6a, 0x6e, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_Aptos_proto_rawDescOnce sync.Once
	file_Aptos_proto_rawDescData = file_Aptos_proto_rawDesc
)

func file_Aptos_proto_rawDescGZIP() []byte {
	file_Aptos_proto_rawDescOnce.Do(func() {
		file_Aptos_proto_rawDescData = protoimpl.X.CompressGZIP(file_Aptos_proto_rawDescData)
	})
	return file_Aptos_proto_rawDescData
}

var file_Aptos_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_Aptos_proto_goTypes = []interface{}{
	(*TransferMessage)(nil),              // 0: TW.Aptos.Proto.TransferMessage
	(*StructTag)(nil),                    // 1: TW.Aptos.Proto.StructTag
	(*TokenTransferMessage)(nil),         // 2: TW.Aptos.Proto.TokenTransferMessage
	(*ManagedTokensRegisterMessage)(nil), // 3: TW.Aptos.Proto.ManagedTokensRegisterMessage
	(*CreateAccountMessage)(nil),         // 4: TW.Aptos.Proto.CreateAccountMessage
	(*OfferNftMessage)(nil),              // 5: TW.Aptos.Proto.OfferNftMessage
	(*CancelOfferNftMessage)(nil),        // 6: TW.Aptos.Proto.CancelOfferNftMessage
	(*ClaimNftMessage)(nil),              // 7: TW.Aptos.Proto.ClaimNftMessage
	(*NftMessage)(nil),                   // 8: TW.Aptos.Proto.NftMessage
	(*SigningInput)(nil),                 // 9: TW.Aptos.Proto.SigningInput
	(*TransactionAuthenticator)(nil),     // 10: TW.Aptos.Proto.TransactionAuthenticator
	(*SigningOutput)(nil),                // 11: TW.Aptos.Proto.SigningOutput
}
var file_Aptos_proto_depIdxs = []int32{
	1,  // 0: TW.Aptos.Proto.TokenTransferMessage.function:type_name -> TW.Aptos.Proto.StructTag
	1,  // 1: TW.Aptos.Proto.ManagedTokensRegisterMessage.function:type_name -> TW.Aptos.Proto.StructTag
	5,  // 2: TW.Aptos.Proto.NftMessage.offer_nft:type_name -> TW.Aptos.Proto.OfferNftMessage
	6,  // 3: TW.Aptos.Proto.NftMessage.cancel_offer_nft:type_name -> TW.Aptos.Proto.CancelOfferNftMessage
	7,  // 4: TW.Aptos.Proto.NftMessage.claim_nft:type_name -> TW.Aptos.Proto.ClaimNftMessage
	0,  // 5: TW.Aptos.Proto.SigningInput.transfer:type_name -> TW.Aptos.Proto.TransferMessage
	2,  // 6: TW.Aptos.Proto.SigningInput.token_transfer:type_name -> TW.Aptos.Proto.TokenTransferMessage
	4,  // 7: TW.Aptos.Proto.SigningInput.create_account:type_name -> TW.Aptos.Proto.CreateAccountMessage
	8,  // 8: TW.Aptos.Proto.SigningInput.nft_message:type_name -> TW.Aptos.Proto.NftMessage
	3,  // 9: TW.Aptos.Proto.SigningInput.register_token:type_name -> TW.Aptos.Proto.ManagedTokensRegisterMessage
	10, // 10: TW.Aptos.Proto.SigningOutput.authenticator:type_name -> TW.Aptos.Proto.TransactionAuthenticator
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_Aptos_proto_init() }
func file_Aptos_proto_init() {
	if File_Aptos_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_Aptos_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Aptos_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StructTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Aptos_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenTransferMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Aptos_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManagedTokensRegisterMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Aptos_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAccountMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Aptos_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfferNftMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Aptos_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelOfferNftMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Aptos_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClaimNftMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Aptos_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NftMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Aptos_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SigningInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Aptos_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionAuthenticator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Aptos_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SigningOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_Aptos_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*NftMessage_OfferNft)(nil),
		(*NftMessage_CancelOfferNft)(nil),
		(*NftMessage_ClaimNft)(nil),
	}
	file_Aptos_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*SigningInput_Transfer)(nil),
		(*SigningInput_TokenTransfer)(nil),
		(*SigningInput_CreateAccount)(nil),
		(*SigningInput_NftMessage)(nil),
		(*SigningInput_RegisterToken)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Aptos_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Aptos_proto_goTypes,
		DependencyIndexes: file_Aptos_proto_depIdxs,
		MessageInfos:      file_Aptos_proto_msgTypes,
	}.Build()
	File_Aptos_proto = out.File
	file_Aptos_proto_rawDesc = nil
	file_Aptos_proto_goTypes = nil
	file_Aptos_proto_depIdxs = nil
}
