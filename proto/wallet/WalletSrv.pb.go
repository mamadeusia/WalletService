// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.9
// source: proto/wallet/WalletSrv.proto

package WalletSrv

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Network int32

const (
	Network_BSC Network = 0
)

// Enum value maps for Network.
var (
	Network_name = map[int32]string{
		0: "BSC",
	}
	Network_value = map[string]int32{
		"BSC": 0,
	}
)

func (x Network) Enum() *Network {
	p := new(Network)
	*p = x
	return p
}

func (x Network) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Network) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_wallet_WalletSrv_proto_enumTypes[0].Descriptor()
}

func (Network) Type() protoreflect.EnumType {
	return &file_proto_wallet_WalletSrv_proto_enumTypes[0]
}

func (x Network) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Network.Descriptor instead.
func (Network) EnumDescriptor() ([]byte, []int) {
	return file_proto_wallet_WalletSrv_proto_rawDescGZIP(), []int{0}
}

type Asset int32

const (
	Asset_USDC Asset = 0
)

// Enum value maps for Asset.
var (
	Asset_name = map[int32]string{
		0: "USDC",
	}
	Asset_value = map[string]int32{
		"USDC": 0,
	}
)

func (x Asset) Enum() *Asset {
	p := new(Asset)
	*p = x
	return p
}

func (x Asset) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Asset) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_wallet_WalletSrv_proto_enumTypes[1].Descriptor()
}

func (Asset) Type() protoreflect.EnumType {
	return &file_proto_wallet_WalletSrv_proto_enumTypes[1]
}

func (x Asset) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Asset.Descriptor instead.
func (Asset) EnumDescriptor() ([]byte, []int) {
	return file_proto_wallet_WalletSrv_proto_rawDescGZIP(), []int{1}
}

type VoteType int32

const (
	VoteType_For     VoteType = 0
	VoteType_Against VoteType = 1
)

// Enum value maps for VoteType.
var (
	VoteType_name = map[int32]string{
		0: "For",
		1: "Against",
	}
	VoteType_value = map[string]int32{
		"For":     0,
		"Against": 1,
	}
)

func (x VoteType) Enum() *VoteType {
	p := new(VoteType)
	*p = x
	return p
}

func (x VoteType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VoteType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_wallet_WalletSrv_proto_enumTypes[2].Descriptor()
}

func (VoteType) Type() protoreflect.EnumType {
	return &file_proto_wallet_WalletSrv_proto_enumTypes[2]
}

func (x VoteType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VoteType.Descriptor instead.
func (VoteType) EnumDescriptor() ([]byte, []int) {
	return file_proto_wallet_WalletSrv_proto_rawDescGZIP(), []int{2}
}

type TransferRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  string  `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Network Network `protobuf:"varint,2,opt,name=network,proto3,enum=WalletSrv.Network" json:"network,omitempty"`
	Asset   Asset   `protobuf:"varint,3,opt,name=asset,proto3,enum=WalletSrv.Asset" json:"asset,omitempty"`
	Amount  int32   `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *TransferRequest) Reset() {
	*x = TransferRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wallet_WalletSrv_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferRequest) ProtoMessage() {}

func (x *TransferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wallet_WalletSrv_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferRequest.ProtoReflect.Descriptor instead.
func (*TransferRequest) Descriptor() ([]byte, []int) {
	return file_proto_wallet_WalletSrv_proto_rawDescGZIP(), []int{0}
}

func (x *TransferRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *TransferRequest) GetNetwork() Network {
	if x != nil {
		return x.Network
	}
	return Network_BSC
}

func (x *TransferRequest) GetAsset() Asset {
	if x != nil {
		return x.Asset
	}
	return Asset_USDC
}

func (x *TransferRequest) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type TransferResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxId string `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
}

func (x *TransferResponse) Reset() {
	*x = TransferResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wallet_WalletSrv_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferResponse) ProtoMessage() {}

func (x *TransferResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wallet_WalletSrv_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferResponse.ProtoReflect.Descriptor instead.
func (*TransferResponse) Descriptor() ([]byte, []int) {
	return file_proto_wallet_WalletSrv_proto_rawDescGZIP(), []int{1}
}

func (x *TransferResponse) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

type CreateNewInternalWalletRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  string  `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Network Network `protobuf:"varint,2,opt,name=network,proto3,enum=WalletSrv.Network" json:"network,omitempty"`
	Asset   Asset   `protobuf:"varint,3,opt,name=asset,proto3,enum=WalletSrv.Asset" json:"asset,omitempty"`
}

func (x *CreateNewInternalWalletRequest) Reset() {
	*x = CreateNewInternalWalletRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wallet_WalletSrv_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNewInternalWalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNewInternalWalletRequest) ProtoMessage() {}

func (x *CreateNewInternalWalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wallet_WalletSrv_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNewInternalWalletRequest.ProtoReflect.Descriptor instead.
func (*CreateNewInternalWalletRequest) Descriptor() ([]byte, []int) {
	return file_proto_wallet_WalletSrv_proto_rawDescGZIP(), []int{2}
}

func (x *CreateNewInternalWalletRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateNewInternalWalletRequest) GetNetwork() Network {
	if x != nil {
		return x.Network
	}
	return Network_BSC
}

func (x *CreateNewInternalWalletRequest) GetAsset() Asset {
	if x != nil {
		return x.Asset
	}
	return Asset_USDC
}

type CreateNewInternalWalletResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *CreateNewInternalWalletResponse) Reset() {
	*x = CreateNewInternalWalletResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wallet_WalletSrv_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNewInternalWalletResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNewInternalWalletResponse) ProtoMessage() {}

func (x *CreateNewInternalWalletResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wallet_WalletSrv_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNewInternalWalletResponse.ProtoReflect.Descriptor instead.
func (*CreateNewInternalWalletResponse) Descriptor() ([]byte, []int) {
	return file_proto_wallet_WalletSrv_proto_rawDescGZIP(), []int{3}
}

func (x *CreateNewInternalWalletResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type AddExternalWalletRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  string  `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Address string  `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Network Network `protobuf:"varint,3,opt,name=network,proto3,enum=WalletSrv.Network" json:"network,omitempty"`
	Asset   Asset   `protobuf:"varint,4,opt,name=asset,proto3,enum=WalletSrv.Asset" json:"asset,omitempty"`
}

func (x *AddExternalWalletRequest) Reset() {
	*x = AddExternalWalletRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wallet_WalletSrv_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddExternalWalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddExternalWalletRequest) ProtoMessage() {}

func (x *AddExternalWalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wallet_WalletSrv_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddExternalWalletRequest.ProtoReflect.Descriptor instead.
func (*AddExternalWalletRequest) Descriptor() ([]byte, []int) {
	return file_proto_wallet_WalletSrv_proto_rawDescGZIP(), []int{4}
}

func (x *AddExternalWalletRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddExternalWalletRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *AddExternalWalletRequest) GetNetwork() Network {
	if x != nil {
		return x.Network
	}
	return Network_BSC
}

func (x *AddExternalWalletRequest) GetAsset() Asset {
	if x != nil {
		return x.Asset
	}
	return Asset_USDC
}

type AddExternalWalletResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddExternalWalletResponse) Reset() {
	*x = AddExternalWalletResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wallet_WalletSrv_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddExternalWalletResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddExternalWalletResponse) ProtoMessage() {}

func (x *AddExternalWalletResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wallet_WalletSrv_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddExternalWalletResponse.ProtoReflect.Descriptor instead.
func (*AddExternalWalletResponse) Descriptor() ([]byte, []int) {
	return file_proto_wallet_WalletSrv_proto_rawDescGZIP(), []int{5}
}

type CreateRecieptQrcodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  string  `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Network Network `protobuf:"varint,2,opt,name=network,proto3,enum=WalletSrv.Network" json:"network,omitempty"`
	Asset   Asset   `protobuf:"varint,3,opt,name=asset,proto3,enum=WalletSrv.Asset" json:"asset,omitempty"`
	Amount  int32   `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *CreateRecieptQrcodeRequest) Reset() {
	*x = CreateRecieptQrcodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wallet_WalletSrv_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRecieptQrcodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRecieptQrcodeRequest) ProtoMessage() {}

func (x *CreateRecieptQrcodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wallet_WalletSrv_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRecieptQrcodeRequest.ProtoReflect.Descriptor instead.
func (*CreateRecieptQrcodeRequest) Descriptor() ([]byte, []int) {
	return file_proto_wallet_WalletSrv_proto_rawDescGZIP(), []int{6}
}

func (x *CreateRecieptQrcodeRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateRecieptQrcodeRequest) GetNetwork() Network {
	if x != nil {
		return x.Network
	}
	return Network_BSC
}

func (x *CreateRecieptQrcodeRequest) GetAsset() Asset {
	if x != nil {
		return x.Asset
	}
	return Asset_USDC
}

func (x *CreateRecieptQrcodeRequest) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type CreateRecieptQrcodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QrCode string `protobuf:"bytes,1,opt,name=qr_code,json=qrCode,proto3" json:"qr_code,omitempty"`
}

func (x *CreateRecieptQrcodeResponse) Reset() {
	*x = CreateRecieptQrcodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wallet_WalletSrv_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRecieptQrcodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRecieptQrcodeResponse) ProtoMessage() {}

func (x *CreateRecieptQrcodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wallet_WalletSrv_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRecieptQrcodeResponse.ProtoReflect.Descriptor instead.
func (*CreateRecieptQrcodeResponse) Descriptor() ([]byte, []int) {
	return file_proto_wallet_WalletSrv_proto_rawDescGZIP(), []int{7}
}

func (x *CreateRecieptQrcodeResponse) GetQrCode() string {
	if x != nil {
		return x.QrCode
	}
	return ""
}

type InternalVoteOnProposalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ProposalId string   `protobuf:"bytes,2,opt,name=proposalId,proto3" json:"proposalId,omitempty"`
	Type       VoteType `protobuf:"varint,3,opt,name=type,proto3,enum=WalletSrv.VoteType" json:"type,omitempty"` // repeated bytes proofs = 4 ; //we should get it from blockchain service and maybe it's not necessary
}

func (x *InternalVoteOnProposalRequest) Reset() {
	*x = InternalVoteOnProposalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wallet_WalletSrv_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InternalVoteOnProposalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InternalVoteOnProposalRequest) ProtoMessage() {}

func (x *InternalVoteOnProposalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wallet_WalletSrv_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InternalVoteOnProposalRequest.ProtoReflect.Descriptor instead.
func (*InternalVoteOnProposalRequest) Descriptor() ([]byte, []int) {
	return file_proto_wallet_WalletSrv_proto_rawDescGZIP(), []int{8}
}

func (x *InternalVoteOnProposalRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *InternalVoteOnProposalRequest) GetProposalId() string {
	if x != nil {
		return x.ProposalId
	}
	return ""
}

func (x *InternalVoteOnProposalRequest) GetType() VoteType {
	if x != nil {
		return x.Type
	}
	return VoteType_For
}

type InternalVoteOnProposalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxId string `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
}

func (x *InternalVoteOnProposalResponse) Reset() {
	*x = InternalVoteOnProposalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wallet_WalletSrv_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InternalVoteOnProposalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InternalVoteOnProposalResponse) ProtoMessage() {}

func (x *InternalVoteOnProposalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wallet_WalletSrv_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InternalVoteOnProposalResponse.ProtoReflect.Descriptor instead.
func (*InternalVoteOnProposalResponse) Descriptor() ([]byte, []int) {
	return file_proto_wallet_WalletSrv_proto_rawDescGZIP(), []int{9}
}

func (x *InternalVoteOnProposalResponse) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

type ExternalVoteOnProposalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ProposalId string   `protobuf:"bytes,2,opt,name=proposalId,proto3" json:"proposalId,omitempty"`
	Type       VoteType `protobuf:"varint,3,opt,name=type,proto3,enum=WalletSrv.VoteType" json:"type,omitempty"` // repeated bytes proofs = 4 ;
}

func (x *ExternalVoteOnProposalRequest) Reset() {
	*x = ExternalVoteOnProposalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wallet_WalletSrv_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalVoteOnProposalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalVoteOnProposalRequest) ProtoMessage() {}

func (x *ExternalVoteOnProposalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wallet_WalletSrv_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalVoteOnProposalRequest.ProtoReflect.Descriptor instead.
func (*ExternalVoteOnProposalRequest) Descriptor() ([]byte, []int) {
	return file_proto_wallet_WalletSrv_proto_rawDescGZIP(), []int{10}
}

func (x *ExternalVoteOnProposalRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ExternalVoteOnProposalRequest) GetProposalId() string {
	if x != nil {
		return x.ProposalId
	}
	return ""
}

func (x *ExternalVoteOnProposalRequest) GetType() VoteType {
	if x != nil {
		return x.Type
	}
	return VoteType_For
}

type ExternalVoteOnProposalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeeplinkUrl string `protobuf:"bytes,1,opt,name=deeplink_url,json=deeplinkUrl,proto3" json:"deeplink_url,omitempty"`
}

func (x *ExternalVoteOnProposalResponse) Reset() {
	*x = ExternalVoteOnProposalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wallet_WalletSrv_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalVoteOnProposalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalVoteOnProposalResponse) ProtoMessage() {}

func (x *ExternalVoteOnProposalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wallet_WalletSrv_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalVoteOnProposalResponse.ProtoReflect.Descriptor instead.
func (*ExternalVoteOnProposalResponse) Descriptor() ([]byte, []int) {
	return file_proto_wallet_WalletSrv_proto_rawDescGZIP(), []int{11}
}

func (x *ExternalVoteOnProposalResponse) GetDeeplinkUrl() string {
	if x != nil {
		return x.DeeplinkUrl
	}
	return ""
}

var File_proto_wallet_WalletSrv_proto protoreflect.FileDescriptor

var file_proto_wallet_WalletSrv_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2f, 0x57,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x72, 0x76, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09,
	0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x72, 0x76, 0x22, 0x98, 0x01, 0x0a, 0x0f, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x53, 0x72, 0x76, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x07, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x12, 0x26, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x72, 0x76, 0x2e,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x27, 0x0a, 0x10, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x78, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x49, 0x64, 0x22, 0x8f, 0x01,
	0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x77, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x07, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x53, 0x72, 0x76, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x07,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x26, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53,
	0x72, 0x76, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x22,
	0x3b, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x77, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xa3, 0x01, 0x0a,
	0x18, 0x41, 0x64, 0x64, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2c, 0x0a, 0x07,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e,
	0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x72, 0x76, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x26, 0x0a, 0x05, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x53, 0x72, 0x76, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x05, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x22, 0x1b, 0x0a, 0x19, 0x41, 0x64, 0x64, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0xa3, 0x01, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x69, 0x65, 0x70,
	0x74, 0x51, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x53, 0x72, 0x76, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x07, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x26, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x72, 0x76,
	0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x36, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x63, 0x69, 0x65, 0x70, 0x74, 0x51, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x71, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x71, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x81, 0x01,
	0x0a, 0x1d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x56, 0x6f, 0x74, 0x65, 0x4f, 0x6e,
	0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x61, 0x6c, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53,
	0x72, 0x76, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x22, 0x35, 0x0a, 0x1e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x56, 0x6f, 0x74,
	0x65, 0x4f, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x49, 0x64, 0x22, 0x81, 0x01, 0x0a, 0x1d, 0x45, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x56, 0x6f, 0x74, 0x65, 0x4f, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61,
	0x6c, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x13, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x72, 0x76, 0x2e, 0x56, 0x6f,
	0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x43, 0x0a, 0x1e,
	0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x56, 0x6f, 0x74, 0x65, 0x4f, 0x6e, 0x50, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x64, 0x65, 0x65, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x65, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x55, 0x72,
	0x6c, 0x2a, 0x12, 0x0a, 0x07, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x07, 0x0a, 0x03,
	0x42, 0x53, 0x43, 0x10, 0x00, 0x2a, 0x11, 0x0a, 0x05, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x08,
	0x0a, 0x04, 0x55, 0x53, 0x44, 0x43, 0x10, 0x00, 0x2a, 0x20, 0x0a, 0x08, 0x56, 0x6f, 0x74, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x46, 0x6f, 0x72, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x07, 0x41, 0x67, 0x61, 0x69, 0x6e, 0x73, 0x74, 0x10, 0x01, 0x32, 0xf2, 0x04, 0x0a, 0x09, 0x57,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x72, 0x76, 0x12, 0x72, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4e, 0x65, 0x77, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x12, 0x29, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x72, 0x76, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x77, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a,
	0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x72, 0x76, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4e, 0x65, 0x77, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x11,
	0x41, 0x64, 0x64, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x57, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x12, 0x23, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x72, 0x76, 0x2e, 0x41, 0x64,
	0x64, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53,
	0x72, 0x76, 0x2e, 0x41, 0x64, 0x64, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6f,
	0x0a, 0x16, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x56, 0x6f, 0x74, 0x65, 0x4f, 0x6e,
	0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x28, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x53, 0x72, 0x76, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x56, 0x6f, 0x74,
	0x65, 0x4f, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x29, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x72, 0x76, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x56, 0x6f, 0x74, 0x65, 0x4f, 0x6e, 0x50, 0x72, 0x6f,
	0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x6f, 0x0a, 0x16, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x56, 0x6f, 0x74, 0x65, 0x4f,
	0x6e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x28, 0x2e, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x53, 0x72, 0x76, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x56, 0x6f,
	0x74, 0x65, 0x4f, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x72, 0x76, 0x2e,
	0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x56, 0x6f, 0x74, 0x65, 0x4f, 0x6e, 0x50, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x45, 0x0a, 0x08, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x57,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x72, 0x76, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x53, 0x72, 0x76, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x63, 0x69, 0x65, 0x70, 0x74, 0x51, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x25,
	0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x72, 0x76, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x63, 0x69, 0x65, 0x70, 0x74, 0x51, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x72,
	0x76, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x69, 0x65, 0x70, 0x74, 0x51,
	0x72, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x13, 0x5a, 0x11, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x57, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x53, 0x72, 0x76, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_wallet_WalletSrv_proto_rawDescOnce sync.Once
	file_proto_wallet_WalletSrv_proto_rawDescData = file_proto_wallet_WalletSrv_proto_rawDesc
)

func file_proto_wallet_WalletSrv_proto_rawDescGZIP() []byte {
	file_proto_wallet_WalletSrv_proto_rawDescOnce.Do(func() {
		file_proto_wallet_WalletSrv_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_wallet_WalletSrv_proto_rawDescData)
	})
	return file_proto_wallet_WalletSrv_proto_rawDescData
}

var file_proto_wallet_WalletSrv_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_proto_wallet_WalletSrv_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_proto_wallet_WalletSrv_proto_goTypes = []interface{}{
	(Network)(0),                            // 0: WalletSrv.Network
	(Asset)(0),                              // 1: WalletSrv.Asset
	(VoteType)(0),                           // 2: WalletSrv.VoteType
	(*TransferRequest)(nil),                 // 3: WalletSrv.TransferRequest
	(*TransferResponse)(nil),                // 4: WalletSrv.TransferResponse
	(*CreateNewInternalWalletRequest)(nil),  // 5: WalletSrv.CreateNewInternalWalletRequest
	(*CreateNewInternalWalletResponse)(nil), // 6: WalletSrv.CreateNewInternalWalletResponse
	(*AddExternalWalletRequest)(nil),        // 7: WalletSrv.AddExternalWalletRequest
	(*AddExternalWalletResponse)(nil),       // 8: WalletSrv.AddExternalWalletResponse
	(*CreateRecieptQrcodeRequest)(nil),      // 9: WalletSrv.CreateRecieptQrcodeRequest
	(*CreateRecieptQrcodeResponse)(nil),     // 10: WalletSrv.CreateRecieptQrcodeResponse
	(*InternalVoteOnProposalRequest)(nil),   // 11: WalletSrv.InternalVoteOnProposalRequest
	(*InternalVoteOnProposalResponse)(nil),  // 12: WalletSrv.InternalVoteOnProposalResponse
	(*ExternalVoteOnProposalRequest)(nil),   // 13: WalletSrv.ExternalVoteOnProposalRequest
	(*ExternalVoteOnProposalResponse)(nil),  // 14: WalletSrv.ExternalVoteOnProposalResponse
}
var file_proto_wallet_WalletSrv_proto_depIdxs = []int32{
	0,  // 0: WalletSrv.TransferRequest.network:type_name -> WalletSrv.Network
	1,  // 1: WalletSrv.TransferRequest.asset:type_name -> WalletSrv.Asset
	0,  // 2: WalletSrv.CreateNewInternalWalletRequest.network:type_name -> WalletSrv.Network
	1,  // 3: WalletSrv.CreateNewInternalWalletRequest.asset:type_name -> WalletSrv.Asset
	0,  // 4: WalletSrv.AddExternalWalletRequest.network:type_name -> WalletSrv.Network
	1,  // 5: WalletSrv.AddExternalWalletRequest.asset:type_name -> WalletSrv.Asset
	0,  // 6: WalletSrv.CreateRecieptQrcodeRequest.network:type_name -> WalletSrv.Network
	1,  // 7: WalletSrv.CreateRecieptQrcodeRequest.asset:type_name -> WalletSrv.Asset
	2,  // 8: WalletSrv.InternalVoteOnProposalRequest.type:type_name -> WalletSrv.VoteType
	2,  // 9: WalletSrv.ExternalVoteOnProposalRequest.type:type_name -> WalletSrv.VoteType
	5,  // 10: WalletSrv.WalletSrv.CreateNewInternalWallet:input_type -> WalletSrv.CreateNewInternalWalletRequest
	7,  // 11: WalletSrv.WalletSrv.AddExternalWallet:input_type -> WalletSrv.AddExternalWalletRequest
	11, // 12: WalletSrv.WalletSrv.InternalVoteOnProposal:input_type -> WalletSrv.InternalVoteOnProposalRequest
	13, // 13: WalletSrv.WalletSrv.ExternalVoteOnProposal:input_type -> WalletSrv.ExternalVoteOnProposalRequest
	3,  // 14: WalletSrv.WalletSrv.Transfer:input_type -> WalletSrv.TransferRequest
	9,  // 15: WalletSrv.WalletSrv.CreateRecieptQrcode:input_type -> WalletSrv.CreateRecieptQrcodeRequest
	6,  // 16: WalletSrv.WalletSrv.CreateNewInternalWallet:output_type -> WalletSrv.CreateNewInternalWalletResponse
	8,  // 17: WalletSrv.WalletSrv.AddExternalWallet:output_type -> WalletSrv.AddExternalWalletResponse
	12, // 18: WalletSrv.WalletSrv.InternalVoteOnProposal:output_type -> WalletSrv.InternalVoteOnProposalResponse
	14, // 19: WalletSrv.WalletSrv.ExternalVoteOnProposal:output_type -> WalletSrv.ExternalVoteOnProposalResponse
	4,  // 20: WalletSrv.WalletSrv.Transfer:output_type -> WalletSrv.TransferResponse
	10, // 21: WalletSrv.WalletSrv.CreateRecieptQrcode:output_type -> WalletSrv.CreateRecieptQrcodeResponse
	16, // [16:22] is the sub-list for method output_type
	10, // [10:16] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_proto_wallet_WalletSrv_proto_init() }
func file_proto_wallet_WalletSrv_proto_init() {
	if File_proto_wallet_WalletSrv_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_wallet_WalletSrv_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wallet_WalletSrv_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wallet_WalletSrv_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNewInternalWalletRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wallet_WalletSrv_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNewInternalWalletResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wallet_WalletSrv_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddExternalWalletRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wallet_WalletSrv_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddExternalWalletResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wallet_WalletSrv_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRecieptQrcodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wallet_WalletSrv_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRecieptQrcodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wallet_WalletSrv_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InternalVoteOnProposalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wallet_WalletSrv_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InternalVoteOnProposalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wallet_WalletSrv_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalVoteOnProposalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wallet_WalletSrv_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalVoteOnProposalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_wallet_WalletSrv_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_wallet_WalletSrv_proto_goTypes,
		DependencyIndexes: file_proto_wallet_WalletSrv_proto_depIdxs,
		EnumInfos:         file_proto_wallet_WalletSrv_proto_enumTypes,
		MessageInfos:      file_proto_wallet_WalletSrv_proto_msgTypes,
	}.Build()
	File_proto_wallet_WalletSrv_proto = out.File
	file_proto_wallet_WalletSrv_proto_rawDesc = nil
	file_proto_wallet_WalletSrv_proto_goTypes = nil
	file_proto_wallet_WalletSrv_proto_depIdxs = nil
}
